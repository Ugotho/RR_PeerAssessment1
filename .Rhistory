getwd()
stepsDF <- readCSV("./activity.csv", header=TRUE)
stepsDF <- read.csv("./activity.csv", header=TRUE)
activityDF <- stepsDF
head(activityDF)
?table
table(activityDF)
head(activityDF)
?aggregate
aggregate(activityDF, date)
dateList <- unique(activityDF$date)
head(dateList)
aggregate(activityDF, by=date, FUN=sum)
aggregate(activityDF, by=list(date), FUN=sum)
head(activityDF)
summary(activityDF)
names(activityDF)
str(activityDF)
aggregate(activityDF)
aggregate(activityDF, by=list(date), FUN=sum)
aggregate(activityDF, by=list(activityDF.date), FUN=sum)
aggregate(activityDF, by=list(activityDF$date), FUN=sum)
aggregate(activityDF, by=list(activityDF$date), FUN=sum)
aggregate(activityDF$steps, by=list(activityDF$date), FUN=sum)
activityDF[,activityDF$date==1]
activityDF[,activityDF$date=='2012-10-01']
head(activityDF)
activity[activityDF$date=='2012-10-01',]
activityDF[activityDF$date=='2012-10-01',]
aggregate(activityDF, by=list(activityDF$date), sum)
aggregate(activityDF$steps, by=list(activityDF$date), sum)
stepsPerDay <- aggregate(activityDF$steps, by=list(activityDF$date), sum)
head(stepsPerDay)
class(stepsPerDay)
stepsPerDayDF <- stepsPerDay
?histogram
hist(stepsPerDayDF[,1])
hist(stepsPerDayDF$x)
hist(stepsPerDayDF$x, breaks=20)
hist(stepsPerDayDF$x, col="green", breaks=20)
?aggregate
names(stepsPerDayDF) <- c("date", "steps")
head(stepsPerDayDF)
stepsPerDayDF <- aggregate(activityDF$steps, by=list(activityDF$date), sum,
na.action = na.omit)
hist(stepsPerDayDF$steps, col="green", breaks=20)
hist(stepsPerDayDF$steps, col="green")
hist(stepsPerDayDF$steps, col="green", break=10)
hist(stepsPerDayDF$steps, col="green", breaks=10)
hist(stepsPerDayDF$steps, col="green", breaks=20)
hist(stepsPerDayDF$steps, col="green", breaks=10)
mean(stepsPerDayDF$steps)
mean(stepsPerDayDF$steps[!is.na(stepsPerDayDF$steps)])
median(stepsPerDayDF$steps[!is.na(stepsPerDayDF$steps)])
stepsPerDayDF <- aggregate(activityDF$steps,
by=list(activityDF$date), sum, na.action = na.omit)
stepsPerDayDF <- aggregate(activityDF$steps, by=list(activityDF$date), sum, na.action = na.omit)
stepsPerDayDF <- aggregate(activityDF$steps, by=list(activityDF$date), sum)
head(stepsPerDayDF)
stepsPerDayDF <- aggregate(activityDF$steps, by=list(activityDF$date), sum, na.action=na.omit)
?aggregate
stepsPerDayDF <- aggregate(activityDF$steps, by=list(activityDF$date), sum, na.action = na.omit)
stepsPerDayDF <- aggregate(activityDF$steps[!is.na(activityDF$steps)], by=list(activityDF$date), sum)
stepsPerDayDF <- aggregate(activityDF$steps[!is.na(activityDF$steps)], by=list(activityDF$date[!is.na(activityDF$steps)]), sum)
head(stepsPerDayDF)
mean(stepsPerDayDF$steps)
stepsPerDayDF
names(stepsPerDayDF) <- c("date", "steps")
mean(stepsPerDayDF$steps)
median(stepsPerDayDF$steps)
intervalMeanDF <- aggregate(activityDF$steps[!is.na(activityDF$steps)], )
intervalMeanDF <- aggregate(activityDF$steps[!is.na(activityDF$steps)], by=list(activity$interval[!is.na(activityDF$steps])]), mean)
intervalMeanDF <- aggregate(activityDF$steps[!is.na(activityDF$steps)], by=list(activity$interval[!is.na(activityDF$steps)]), mean)
intervalMeanDF <- aggregate(activityDF$steps[!is.na(activityDF$steps)], by=list(activityDF$interval[!is.na(activityDF$steps)]), mean)
dim(intervalMeanDF)
288/24
head(intervalMeanDF)
names(intervalMeanDF) <- c("interval", "meanSteps")
head(intervalMeanDF)
plot(intervalMeanDF$interval, intervalMeanDF$meanSteps, type="l", xlab= "5-min Interval of the Day", ylab= "Mean Number of Steps", col="green" , lwd=2)
plot(intervalMeanDF$interval, intervalMeanDF$meanSteps, type="l", xlab= "5-min Interval of the Day", ylab= "Mean Number of Steps", col="blue" , lwd=1)
tail(intervalMeanDF)
names(intervalMeanDF)
class(names(intervalMeanDF))
class(intervalMeanDF$interval)
head(intervalMean,20)
head(intervalMeanDF,20)
plot(intervalMeanDF$interval[1:20], intervalMeanDF$meanSteps, type="l", xlab= "5-min Interval of the Day", ylab= "Mean Number of Steps", col="blue" , lwd=1)
plot(intervalMeanDF$interval[1:20], intervalMeanDF$meanSteps[1:20], type="l", xlab= "5-min Interval of the Day", ylab= "Mean Number of Steps", col="blue" , lwd=1)
head(intervalMeanDF, 15)
dim(intervalMeanDF)
60*24
head(activityDF, 20)
tail(activityDF, 20)
2355L / 100
2355L / 100L
2355L %/% 100L
2355 % 100L
2355 % 100
2355L %% 100L
names(intervalMeanDF) <- c("interval", "meanSteps", "minutes")
for n in 1:length(intervalMeanDF$interval)  {
minutesRemainder <- intervalMeanDF$interval %% 100L
hours <- intervalMeanDF$interval %/% 100L
intervalMeanDF$minutes[n] <- (60L*hours) + minutesRemainder
}
length(intervalMeanDF$interval)
for n in 1:length(intervalMeanDF$interval  {
minutesRemainder <- intervalMeanDF$interval %% 100L
hours <- intervalMeanDF$interval %/% 100L
intervalMeanDF$minutes[n] <- (60L*hours) + minutesRemainder
}
for n in 1:length(intervalMeanDF$interval)  {
minutesRemainder <- intervalMeanDF$interval %% 100L
hours <- intervalMeanDF$interval %/% 100L
intervalMeanDF$minutes[n] <- (60L*hours) + minutesRemainder
}
n = 0
for n in 1:length(intervalMeanDF$interval)  {
minutesRemainder <- intervalMeanDF$interval %% 100L
hours <- intervalMeanDF$interval %/% 100L
intervalMeanDF$minutes[n] <- (60L*hours) + minutesRemainder
}
for (n in 1:length(intervalMeanDF$interval))  {
minutesRemainder <- intervalMeanDF$interval %% 100L
hours <- intervalMeanDF$interval %/% 100L
intervalMeanDF$minutes[n] <- (60L*hours) + minutesRemainder
}
warnings()
for (n in 1:length(intervalMeanDF$interval))  {
minutesRemainder <- intervalMeanDF$interval[n] %% 100L
hours <- intervalMeanDF$interval[n] %/% 100L
intervalMeanDF$minutes[n] <- (60L*hours) + minutesRemainder
}
names(intervalMeanDF)
tail(intervalMeanDF, 20)
plot(intervalMeanDF$minutes, intervalMeanDF$meanSteps, type="l", xlab= "5-min Interval of the Day", ylab= "Mean Number of Steps", col="blue" , lwd=1)
plot(intervalMeanDF$minutes, intervalMeanDF$meanSteps, type="l", xlab= "Start of 5-min Interval of the Day", ylab= "Mean Number of Steps", col="blue" , lwd=1)
plot(intervalMeanDF$minutes, intervalMeanDF$meanSteps, type="l", xlab= "Start of 5-min Interval of the Day", ylab= "Average Number of Steps", col="blue" , lwd=1)
plot(intervalMeanDF$minutes, intervalMeanDF$meanSteps, type="l", xlab= "5-min Interval of the Day (start time)", ylab= "Average Number of Steps", col="blue" , lwd=1)
intervalMeanDF[max(intervalMeanDF$steps),]
intervalMeanDF[max(intervalMeanDF$meanSteps),]
max(intervalMeanDF$meanSteps)
intervalMeanDF[intervalMeanDF$meanSteps==max(intervalMeanDF$meanSteps),]
intervalMeanDF$interval[intervalMeanDF$meanSteps==max(intervalMeanDF$meanSteps)]
plot(intervalMeanDF$minutes, intervalMeanDF$meanSteps, type="l",
xlab= "5-min Interval of the Day (i.e., minute of the day it starts)",
ylab= "Average Number of Steps", col="blue" , lwd=1)
dim(activityDF)
names(activityDF)
length(activityDF$steps[is.na(activityDF$steps) | is.na(activityDF$date) | is.na(activityDF$interval)])
length(activityDF$steps[is.na(activityDF$steps)])
completedActivityDF <- activityDF
head(activityDF)
head(completedActivityDF)
completedActivityDF[1,1] <- 7
head(completedActivityDF)
head(activityDF)
completedActivityDF <- activityDF
head(completedActivityDF)
completedActivityDF <- activityDF
for (n in 1:length(completedActivityDF$steps))  {
if (is.na(completedActivityDF$steps[n]))
completedActivityDF$steps[n] <- intervalMeanDF$steps[
intervalMeanDF$interval==completedActivityDF$interval[n]
]
}
length(completedActivityDF$steps)
n = 1
intervalMeanDF$steps[
intervalMeanDF$interval==completedActivityDF$interval[n]
]
intervalMeanDF$steps[1]
completedActivityDF <- activityDF
for (n in 1:length(completedActivityDF$steps))  {
if (is.na(completedActivityDF$steps[n]))
completedActivityDF$steps[n] <- intervalMeanDF$meanSteps[
intervalMeanDF$interval==completedActivityDF$interval[n]
]
}
head(completedActivityDF)
completedStepsPerDayDF <- aggregate(completedActivityDF$steps,
by=list(activityDF$date),
sum)
# Give the columns of stepsPerDayDF more meaningful names
names(completedStepsPerDayDF) <- c("date", "steps")
hist(completedStepsPerDayDF$steps, col="red", breaks=10)
mean(completedStepsPerDayDF$steps)
median(completedStepsPerDayDF$steps)
mean(stepsPerDayDF$steps)
median(stepsPerDayDF$steps)
now
now()
date()
head(activityDF)
ymd(activityDF[1,2])
library(lubridate)
ymd(activityDF[1,2])
class(ymd(activityDF[1,2]))
weekdays(ymd(activityDF[1,2]))
completedActivityDF$weekday <- weekdays(ymd(completedActivityDF$date))
head(completedActivityDF)
tail(completedActivityDF)
# Add columns for the weekday (e.g., "Monday", "Tuesday", etc.) and
# the dayType ("Weekday", "Weekend")
library(lubridate)
completedActivityDF$weekday <- weekdays(ymd(completedActivityDF$date))
dayTypeVector <- vector()
for (n in length(completedActivityDF$weekday))  {
if (completedActivityDF$weekday[n]=="Saturday"
| completedActivityDF$weekday[n]=="Sunday")
dayTypeVector <- c(dayTypeVector, "Weekend")
else
dayTypeVector <- c(dayTypeVector, "Weekday")
}
completedActivityDF$dayType <- factor(dayTypeVector)
head(completedActivityDF,15)
head(completedActivityDF[1000,],15)
head(completedActivityDF[1500,],15)
library(lubridate)
completedActivityDF$weekday <- weekdays(ymd(completedActivityDF$date))
dayTypeVector <- vector()
for (n in length(completedActivityDF$weekday))  {
if (as.character(completedActivityDF$weekday[n])=="Saturday"
| as.character(completedActivityDF$weekday[n])=="Sunday")
dayTypeVector <- c(dayTypeVector, "Weekend")
else
dayTypeVector <- c(dayTypeVector, "Weekday")
}
completedActivityDF$dayType <- factor(dayTypeVector)
head(completedActivityDF[1500,],15)
library(lubridate)
completedActivityDF$weekday <- weekdays(ymd(completedActivityDF$date))
dayTypeVector <- vector()
for (n in length(completedActivityDF$weekday))  {
if (as.character(completedActivityDF$weekday[n])=="Saturday"
| as.character(completedActivityDF$weekday[n])=="Sunday")
dayTypeVector <- c(dayTypeVector, "Weekend")
else
dayTypeVector <- c(dayTypeVector, "Weekday")
}
completedActivityDF$dayType <- factor(dayTypeVector)
summary(completedActivityDF)
str(completedActivityDF)
head(completedActivityDF[1500,],15)
completedActivityDF$weekday[1500]
completedActivityDF$weekday[1500]=="Saturday"
in length(completedActivityDF$weekday))  {
if (completedActivityDF$weekday[n]=="Saturday"
| completedActivityDF$weekday[n]=="Sunday")
dayTypeVector <- c(dayTypeVector, "Weekend")
else
dayTypeVector <- c(dayTypeVector, "Weekday")
}
completedActivityDF$dayType <- factor(dayTypeVector)
library(lubridate)
completedActivityDF$weekday <- weekdays(ymd(completedActivityDF$date))
dayTypeVector <- vector()
for (n in 1:length(completedActivityDF$weekday))  {
if (completedActivityDF$weekday[n]=="Saturday"
| completedActivityDF$weekday[n]=="Sunday")
dayTypeVector <- c(dayTypeVector, "Weekend")
else
dayTypeVector <- c(dayTypeVector, "Weekday")
}
completedActivityDF$dayType <- factor(dayTypeVector)
head(completedActivityDF[1500,],15)
head(completedActivityDF,15)
summary(completedActivityDF)
str(completedActivityDF)
library(lubridate)
completedActivityDF$weekday <- weekdays(ymd(completedActivityDF$date))
dayTypeVector <- vector()
for (n in 1:length(completedActivityDF$weekday))  {
if (completedActivityDF$weekday[n]=="Saturday"
| completedActivityDF$weekday[n]=="Sunday")
dayTypeVector <- c(dayTypeVector, "Weekend")
else
dayTypeVector <- c(dayTypeVector, "Weekday")
}
completedActivityDF$dayType <- factor(dayTypeVector)
head(completedActivityDF)
head(completedActivityDF[1500,])
tail(completedActivityDF)
head(completedActivityDF[1800,])
?rep
nrow(completedActivityDF)
